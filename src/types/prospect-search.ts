// SAM AI Platform - Prospect Search Types
// Generated by Supabase Database Agent

// ============================================================================
// DATABASE TABLE TYPES
// ============================================================================

export interface SearchConfiguration {
  id: string;
  workspace_id: string;
  user_id: string;
  name: string;
  search_type: SearchType;
  search_parameters: Record<string, any>;
  linkedin_url?: string;
  is_active: boolean;
  is_favorite: boolean;
  execution_count: number;
  last_executed_at?: string;
  created_at: string;
  updated_at: string;
}

export interface CompanyProfile {
  id: string;
  workspace_id: string;
  linkedin_company_id?: string;
  name: string;
  linkedin_url: string;
  industry?: string;
  size_range?: string;
  location?: string;
  description?: string;
  follower_count?: number;
  employee_count?: number;
  website_url?: string;
  logo_url?: string;
  metadata: Record<string, any>;
  last_scraped_at?: string;
  created_at: string;
  updated_at: string;
}

export interface ProspectProfile {
  id: string;
  workspace_id: string;
  linkedin_profile_id?: string;
  full_name: string;
  first_name?: string;
  last_name?: string;
  headline?: string;
  current_title?: string;
  current_company?: string;
  company_id?: string;
  location?: string;
  linkedin_url?: string;
  profile_image_url?: string;
  
  // Contact Information
  email?: string;
  phone?: string;
  twitter_handle?: string;
  website_url?: string;
  
  // Professional Information
  experience: Experience[];
  education: Education[];
  skills: string[];
  certifications: Certification[];
  
  // Engagement Data
  connection_count?: number;
  recent_activity: Record<string, any>;
  post_engagement_score: number;
  
  // Data Quality & Status
  data_completeness_score: number;
  enrichment_status: EnrichmentStatus;
  verification_status: VerificationStatus;
  
  // Source & Metadata
  source: ProspectSource;
  source_details: Record<string, any>;
  metadata: Record<string, any>;
  
  // Timestamps
  last_enriched_at?: string;
  last_contacted_at?: string;
  created_at: string;
  updated_at: string;
}

export interface SearchResult {
  id: string;
  search_configuration_id: string;
  prospect_profile_id: string;
  workspace_id: string;
  
  // Search Context
  search_position?: number;
  relevance_score: number;
  quality_score: number;
  
  // Extraction Details
  extraction_method?: ExtractionMethod;
  extraction_timestamp: string;
  extraction_metadata: Record<string, any>;
  
  // Status
  processing_status: ProcessingStatus;
  error_details?: string;
  
  // Campaign Integration
  assigned_to_campaign: boolean;
  campaign_assignment_date?: string;
  
  created_at: string;
}

export interface SearchHistory {
  id: string;
  search_configuration_id: string;
  workspace_id: string;
  user_id: string;
  
  // Execution Details
  execution_status: ExecutionStatus;
  started_at: string;
  completed_at?: string;
  duration_seconds?: number;
  
  // Results Summary
  total_prospects_found: number;
  new_prospects_added: number;
  existing_prospects_updated: number;
  prospects_with_errors: number;
  
  // Cost & Usage
  estimated_cost: number;
  actual_cost: number;
  brightdata_requests: number;
  api_calls_made: number;
  
  // Technical Details
  n8n_workflow_execution_id?: string;
  brightdata_session_id?: string;
  error_message?: string;
  execution_metadata: Record<string, any>;
  
  created_at: string;
}

export interface CsvUploadSession {
  id: string;
  workspace_id: string;
  user_id: string;
  
  // File Information
  filename: string;
  file_size_bytes: number;
  file_hash: string;
  
  // Processing Status
  processing_status: CsvProcessingStatus;
  validation_status: CsvValidationStatus;
  
  // Results Summary
  total_rows: number;
  valid_rows: number;
  invalid_rows: number;
  duplicate_rows: number;
  prospects_created: number;
  prospects_updated: number;
  
  // Validation Results
  validation_errors: CsvError[];
  processing_errors: CsvError[];
  field_mapping: Record<string, string>;
  
  // Processing Details
  started_at: string;
  completed_at?: string;
  processing_duration_seconds?: number;
  
  created_at: string;
  updated_at: string;
}

export interface ProspectCampaignAssignment {
  id: string;
  workspace_id: string;
  prospect_profile_id: string;
  campaign_id: string;
  search_result_id?: string;
  
  // Assignment Details
  assignment_method?: AssignmentMethod;
  assignment_reason?: string;
  assigned_by_user_id?: string;
  
  // Status Tracking
  status: AssignmentStatus;
  
  // Performance Tracking
  messages_sent: number;
  responses_received: number;
  meetings_booked: number;
  deals_created: number;
  
  assigned_at: string;
  last_activity_at?: string;
}

export interface EnrichmentQueue {
  id: string;
  workspace_id: string;
  prospect_profile_id: string;
  
  // Enrichment Configuration
  enrichment_type: EnrichmentType;
  enrichment_provider?: EnrichmentProvider;
  priority: number;
  
  // Processing Status
  status: EnrichmentQueueStatus;
  attempts: number;
  max_attempts: number;
  
  // Results
  enrichment_data: Record<string, any>;
  confidence_score: number;
  error_message?: string;
  
  // Scheduling
  scheduled_for: string;
  started_at?: string;
  completed_at?: string;
  next_retry_at?: string;
  
  created_at: string;
  updated_at: string;
}

// ============================================================================
// ENUM TYPES
// ============================================================================

export type SearchType = 
  | 'basic-search'
  | 'sales-navigator' 
  | 'recruiter-search'
  | 'company-follower'
  | 'csv-import'
  | 'post-engagement'
  | 'group-search'
  | 'event-search'
  | 'people-you-know';

export type EnrichmentStatus = 'pending' | 'processing' | 'completed' | 'failed';
export type VerificationStatus = 'unverified' | 'verified' | 'invalid';
export type ProspectSource = 'linkedin_search' | 'csv_upload' | 'api_import' | 'manual_entry';
export type ExtractionMethod = 'brightdata' | 'linkedin_api' | 'csv_upload' | 'manual';
export type ProcessingStatus = 'new' | 'processing' | 'completed' | 'error';
export type ExecutionStatus = 'queued' | 'running' | 'completed' | 'failed' | 'cancelled';
export type CsvProcessingStatus = 'uploaded' | 'validating' | 'processing' | 'completed' | 'failed';
export type CsvValidationStatus = 'pending' | 'valid' | 'invalid';
export type AssignmentMethod = 'manual' | 'auto_bulk' | 'ai_recommendation' | 'rule_based';
export type AssignmentStatus = 'assigned' | 'active' | 'paused' | 'completed' | 'removed';
export type EnrichmentType = 'linkedin_profile' | 'email_finder' | 'phone_finder' | 'company_data' | 'social_profiles';
export type EnrichmentProvider = 'brightdata' | 'apollo' | 'zoominfo' | 'clearbit' | 'hunter';
export type EnrichmentQueueStatus = 'queued' | 'processing' | 'completed' | 'failed' | 'skipped';

// ============================================================================
// SUPPORTING TYPES
// ============================================================================

export interface Experience {
  title: string;
  company: string;
  duration?: string;
  location?: string;
  description?: string;
  start_date?: string;
  end_date?: string;
  is_current?: boolean;
}

export interface Education {
  school: string;
  degree?: string;
  field?: string;
  duration?: string;
  start_year?: number;
  end_year?: number;
  description?: string;
}

export interface Certification {
  name: string;
  issuer?: string;
  issue_date?: string;
  expiry_date?: string;
  credential_id?: string;
  credential_url?: string;
}

export interface CsvError {
  row: number;
  field: string;
  message: string;
  value?: string;
}

// ============================================================================
// API REQUEST/RESPONSE TYPES
// ============================================================================

export interface CreateSearchConfigurationRequest {
  name: string;
  search_type: SearchType;
  search_parameters: Record<string, any>;
  linkedin_url?: string;
  is_favorite?: boolean;
}

export interface UpdateSearchConfigurationRequest {
  name?: string;
  search_parameters?: Record<string, any>;
  linkedin_url?: string;
  is_active?: boolean;
  is_favorite?: boolean;
}

export interface ExecuteSearchRequest {
  search_configuration_id: string;
  max_results?: number;
  use_brightdata?: boolean;
  country_proxy?: string;
  priority?: number;
}

export interface ExecuteSearchResponse {
  search_history_id: string;
  execution_status: ExecutionStatus;
  estimated_cost: number;
  estimated_duration_minutes: number;
  n8n_workflow_execution_id?: string;
}

export interface CreateProspectProfileRequest {
  full_name: string;
  current_company: string;
  linkedin_profile_id?: string;
  first_name?: string;
  last_name?: string;
  headline?: string;
  current_title?: string;
  location?: string;
  linkedin_url?: string;
  email?: string;
  phone?: string;
  source: ProspectSource;
  source_details?: Record<string, any>;
}

export interface BulkCreateProspectsRequest {
  prospects: CreateProspectProfileRequest[];
  search_configuration_id?: string;
  auto_enrich?: boolean;
  deduplicate?: boolean;
}

export interface BulkCreateProspectsResponse {
  created_count: number;
  updated_count: number;
  duplicate_count: number;
  error_count: number;
  created_prospect_ids: string[];
  errors: Array<{
    prospect: CreateProspectProfileRequest;
    error: string;
  }>;
}

export interface SearchConfigurationWithStats extends SearchConfiguration {
  total_executions: number;
  total_prospects_found: number;
  average_cost_per_execution: number;
  last_execution_status?: ExecutionStatus;
  success_rate: number;
}

export interface ProspectProfileWithEnrichment extends ProspectProfile {
  search_results?: SearchResult[];
  campaign_assignments?: ProspectCampaignAssignment[];
  enrichment_queue_items?: EnrichmentQueue[];
  company_profile?: CompanyProfile;
}

// ============================================================================
// SEARCH PARAMETERS TYPES
// ============================================================================

export interface LinkedInSearchParameters {
  // Basic Search Parameters
  keywords?: string;
  first_name?: string;
  last_name?: string;
  title?: string;
  company?: string;
  school?: string;
  
  // Location Parameters
  location?: string;
  geoUrn?: string;
  
  // Industry and Company Parameters
  industry?: string[];
  current_company?: string[];
  past_company?: string[];
  company_size?: string[];
  
  // Experience Parameters
  experience_level?: string[];
  years_of_experience?: {
    min?: number;
    max?: number;
  };
  
  // Education Parameters
  school_filter?: string[];
  field_of_study?: string[];
  
  // Advanced Filters
  connections_of?: string[];
  profile_language?: string[];
  service_categories?: string[];
  
  // Sales Navigator Specific
  lead_interests?: string[];
  seniority_level?: string[];
  function_area?: string[];
  geography?: string;
  
  // Recruiter Specific
  willing_to_relocate?: boolean;
  open_to_opportunities?: boolean;
  talent_pool?: string[];
}

export interface CompanyFollowerSearchParameters {
  company_url: string;
  company_id?: string;
  follower_type?: 'all' | 'employees' | 'non_employees';
  location_filter?: string;
  title_filter?: string;
  max_results?: number;
}

export interface PostEngagementSearchParameters {
  post_url: string;
  post_id?: string;
  engagement_type?: 'likes' | 'comments' | 'shares' | 'all';
  author_filter?: boolean;
  connection_filter?: 'first' | 'second' | 'third' | 'all';
  max_results?: number;
}

export interface GroupSearchParameters {
  group_url: string;
  group_id?: string;
  member_type?: 'all' | 'active' | 'new';
  role_filter?: 'admin' | 'member' | 'all';
  location_filter?: string;
  max_results?: number;
}

export interface EventSearchParameters {
  event_url: string;
  event_id?: string;
  attendee_type?: 'going' | 'interested' | 'all';
  connection_filter?: 'first' | 'second' | 'third' | 'all';
  max_results?: number;
}

// ============================================================================
// FILTER AND PAGINATION TYPES
// ============================================================================

export interface ProspectSearchFilters {
  search_configuration_id?: string;
  source?: ProspectSource[];
  enrichment_status?: EnrichmentStatus[];
  verification_status?: VerificationStatus[];
  data_completeness_min?: number;
  has_email?: boolean;
  has_phone?: boolean;
  has_linkedin?: boolean;
  current_company?: string[];
  location?: string[];
  title_keywords?: string[];
  created_after?: string;
  created_before?: string;
  last_enriched_after?: string;
  last_enriched_before?: string;
}

export interface SearchConfigurationFilters {
  search_type?: SearchType[];
  is_active?: boolean;
  is_favorite?: boolean;
  created_after?: string;
  created_before?: string;
  execution_count_min?: number;
  name_contains?: string;
}

export interface PaginationParams {
  page?: number;
  per_page?: number;
  sort_by?: string;
  sort_order?: 'asc' | 'desc';
}

export interface PaginatedResponse<T> {
  data: T[];
  pagination: {
    page: number;
    per_page: number;
    total_pages: number;
    total_count: number;
    has_next: boolean;
    has_previous: boolean;
  };
}

// ============================================================================
// VALIDATION TYPES
// ============================================================================

export interface ValidationError {
  field: string;
  message: string;
  value?: any;
}

export interface ValidationResult {
  is_valid: boolean;
  errors: ValidationError[];
  warnings?: ValidationError[];
}

export interface ProspectValidationResult extends ValidationResult {
  data_completeness_score: number;
  missing_critical_fields: string[];
  suggested_enrichments: EnrichmentType[];
}

// ============================================================================
// ANALYTICS TYPES
// ============================================================================

export interface SearchAnalytics {
  total_searches: number;
  total_prospects_found: number;
  total_cost_spent: number;
  average_cost_per_search: number;
  average_prospects_per_search: number;
  success_rate: number;
  most_popular_search_types: Array<{
    search_type: SearchType;
    count: number;
    percentage: number;
  }>;
  cost_by_search_type: Array<{
    search_type: SearchType;
    total_cost: number;
    average_cost: number;
  }>;
  prospects_by_source: Array<{
    source: ProspectSource;
    count: number;
    percentage: number;
  }>;
  data_completeness_distribution: Array<{
    score_range: string;
    count: number;
    percentage: number;
  }>;
  enrichment_status_distribution: Array<{
    status: EnrichmentStatus;
    count: number;
    percentage: number;
  }>;
}

export interface SearchPerformanceMetrics {
  search_configuration_id: string;
  search_name: string;
  search_type: SearchType;
  total_executions: number;
  total_prospects: number;
  average_prospects_per_execution: number;
  total_cost: number;
  average_cost_per_execution: number;
  cost_per_prospect: number;
  success_rate: number;
  last_executed: string;
  performance_trend: 'improving' | 'declining' | 'stable';
}

// ============================================================================
// WEBHOOK TYPES (for n8n integration)
// ============================================================================

export interface N8nWebhookPayload {
  webhook_type: 'search_execution' | 'enrichment_complete' | 'csv_processing';
  workspace_id: string;
  user_id: string;
  timestamp: string;
  data: Record<string, any>;
}

export interface SearchExecutionWebhook extends N8nWebhookPayload {
  webhook_type: 'search_execution';
  data: {
    search_configuration_id: string;
    search_history_id: string;
    execution_status: ExecutionStatus;
    prospects_found: number;
    cost_incurred: number;
    error_message?: string;
  };
}

export interface EnrichmentCompleteWebhook extends N8nWebhookPayload {
  webhook_type: 'enrichment_complete';
  data: {
    prospect_profile_id: string;
    enrichment_type: EnrichmentType;
    enrichment_status: EnrichmentQueueStatus;
    data_added: string[];
    confidence_score: number;
    error_message?: string;
  };
}

export interface CsvProcessingWebhook extends N8nWebhookPayload {
  webhook_type: 'csv_processing';
  data: {
    csv_upload_session_id: string;
    processing_status: CsvProcessingStatus;
    prospects_created: number;
    prospects_updated: number;
    validation_errors: number;
    processing_errors: number;
  };
}